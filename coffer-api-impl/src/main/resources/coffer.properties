
home.welcome = is a QSAR web service that predicts chemical compounds and provides fragments to aid interpreting predictions.


model.prediction.tip = Each prediction model provides a probability estimate for the prediction. \
The probability value indicates how confident the classifier is.

model.measured = Measured
model.measured.tip.some = The query compound is included in some of the training datasets. \
The respective prediction models are applied as normal. However, it should be easier for the models to predict this compound correctly. 
model.measured.tip.single = The query compound is included in the training dataset. \
The prediction model is applied as normal. However, it should be easier for the model to predict this compound correctly. 

fragment.hide = small: hide super-fragments that extend smaller fragments.<br>\
all: show all fragments.<br>\
large: hide sub-fragments that are included in larger fragments.
fragment.hide.SUPER.link = small
fragment.hide.NONE.link = all
fragment.hide.SUB.link = large

compound.info.tip = PubChem and ChEMBL are accessed with the compound SMILES to provide additional information.

fragment.type.tip = The service uses filtered (instead of folded) Extended-Connectivity Fingerprint (ECFP) \
fragments as features for the prediction algorithm.  

doc.about = The CoFFer web service predicts chemical compounds and provides information to help interpreting predictions. \
The available QSAR models are built with circular fingerprints that are mined on the respective training dataset. \
This service shows that filtered (instead of folded) fingerprint fragments can yield very predictive models, \
while at the same time, contain useful information when trying to understand model predictions. Please refer to our publication for details.  
#The fragments can encode crucial information about the mode of action of a chemical compound (e.g., a fragment might be a toxicophore).

doc.filteredFragments = We selected the {http://cdk.github.io/cdk/1.5/docs/api/org/openscience/cdk/fingerprint/CircularFingerprinter.html CDK implementation} of \
{http://pubs.acs.org/doi/abs/10.1021/ci100050t Extended-Connectivity Fingerprints} as circular fingerprint fragments. Instead of reducing the large amount \
of features by fingerprint folding, we applied a supervised filtering approach: the method removes redundant (non-closed) fragments as well as fragments \
that are uncorrelated to the target endpoint. Please refer to our publication for details.

doc.classifiers = The {http://www.cs.waikato.ac.nz/~ml/weka machine learning library WEKA} was used to build three types of classifiers  \
({http://weka.sourceforge.net/doc.dev/weka/classifiers/functions/SMO.html Support Vector Machines}, \
{http://weka.sourceforge.net/doc.dev/weka/classifiers/trees/RandomForest.html Random Forests}, \
and {http://weka.sourceforge.net/doc.dev/weka/classifiers/bayes/NaiveBayes.html naive Bayes}). \
When making a prediction for a two class problem (e.g., with class values 'active' and 'in-active'), the models \
provide a probability estimate that expresses the confidence of the classifier. A value close to 100% indicates that \
the classifier is very confident, whereas a value close to 50% means that \
the classifier is very unsure about the predicted compound activity.
  
doc.rankingFragments = Our service ranks fragments according to their importance for predicting the query compound. \
This is computed by swapping the feature value of the fragment and re-classifying the compound. \
Moreover, features are highlighted as "activating" or "de-activating":<br>\
 * A feature is marked as "activating" if it is originally present and a re-classification with swapped feature value \
leads to a lower probability of being active. Also, a feature is marked as "activating" if it was originally absent \
in the query compound and the predicted probability with swapped feature value leads to a higher active probability.<br>\
 * Otherwise, we consider the feature to be "de-activating".<br> \
 <br> \
When swapping feature values for a fragment, our method takes the compound structure into account:<br>\
 * If the evaluated fragment is originally present in a compound, then super-fragments (that extend this fragment) \
will be switched off as well when evaluating the importance of the fragment. \
Additionally, sub-fragments that are included in this fragment and do not match the compound at a different location are disabled.<br>\
 * Accordingly, if the evaluated fragment is originally absent in the compound and is switched on for evaluation, \
then all sub-fragments (that are contained within this fragment) are switched on simultaneously. Please refer to our publication for details.
 
doc.source = This open-source project is implemented in Java and mainly based on the two libraries \
{https://github.com/cdk-dsc CDK} and \
{http://www.cs.waikato.ac.nz/~ml/weka WEKA}. <br> \
Our source code is provided under AGPL license on GitHub. The main libraries are:<br>\
 * {https://github.com/kramerlab/cdk-lib cdk-lib} : Mining fingerprints and depict matches<br>\
 * {https://github.com/kramerlab/cfp-miner cfp-miner} : Building QSAR models with circular fingerprint features<br>\
 * {https://github.com/kramerlab/coffer coffer} : This web service.

doc.validation = The models have been validated with a 3 times repeated, nested 10-fold cross-validation. \
The inner level of cross-validation was used for model selection (to decide on the selected algorithm, parameters and number of features). \
The outer level of cross-validation was used to estimate the predictivity of the model. \
The published models are build on the entire dataset.
 
doc.cite = Gütlein, Martin; Kramer, Stefan<br>\
Filtered circular fingerprints improve either prediction or runtime performance while retaining interpretability<br>\
Journal of Cheminformatics; 8:60; 2016; {https://dx.doi.org/10.1186/s13321-016-0173-z DOI: 10.1186/s13321-016-0173-z}<br>\
Please cite this paper to support CoFFer.

doc.license = This service and the source code is released under {/license/agpl-3.0.txt AGPL}. \
It is provided in the hope that it will be useful, \
but WITHOUT ANY WARRANTY; without even the implied warranty of \
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \
GNU Affero General Public License for more details.

doc.rest = The service can be programmatically accessed via {https://en.wikipedia.org/wiki/Representational_state_transfer REST}.<br>The \
API definition of this service can be found {/api/org/kramerlab/coffer/api/ModelService.html#method.summary here}, \
it is compliant with the {http://opentox.org/dev/apis/api-1.2 OpenTox API} definition for model predictions.

#We integrated the REST API into the Javadoc API to ensure that it is up-to-date.

rest.intro = The example below shows how to use the OpenTox API to predict a compound. \
It uses the command line tool {https://curl.haxx.se curl} as REST client.
rest.num = 5

rest.0.title = A list if available model URIs can be derived with media-type "text/uri-list" 
rest.0.curl = curl -H "Accept:text/uri-list" {0}
rest.0.res = {0}/CPDBAS_Mouse<br>\
{0}/NCTRER<br>\
{0}/ChEMBL_104<br>\
...

rest.1.title = A GET request to a model URI returns basic model properties in Json format
rest.1.curl = curl {0}/CPDBAS_Mouse
rest.1.res = '{'<br>\
   "dc.identifier" : {0}/CPDBAS_Mouse,<br>\
   "ot.dependentVariables" : {0}/CPDBAS_Mouse/feature/measured,<br>\
   "ot.predictedVariables" : {0}/CPDBAS_Mouse/feature/predicted {0}/CPDBAS_Mouse/feature/probability,<br>\
   "rdf.type" : "ot.Model"<br>\
   '}'

rest.2.title = Compounds can be encoded as URI via "{0}/compound/<url-encoded-smiles>"
rest.2.curl = curl -H "Accept:chemical/x-daylight-smiles" {0}/compound/O%3DC%28NC3%3DCC2%3DC%28C%3DC3%29C1%3DCC%3DC%28NC%28C%29%3DO%29C%3DC1C2%29C
rest.2.res = O=C(NC3=CC2=C(C=C3)C1=CC=C(NC(C)=O)C=C1C2)C

rest.3.title = A prediction via POST call to a model URI returns a redirect to the prediction result
rest.3.curl = curl -v -X POST -d "compound_uri={0}/compound/O%3DC%28NC3%3DCC2%3DC%28C%3DC3%29C1%3DCC%3DC%28NC%28C%29%3DO%29C%3DC1C2%29C" {0}/CPDBAS_Mouse
rest.3.res = ...<br>< Location: {0}/CPDBAS_Mouse/prediction/58bd5898ef2bbd4dfce18de0ecf62c07<br>...

rest.4.title = Accessing the prediction returns predicted class and probability
rest.4.curl = curl {0}/CPDBAS_Mouse/prediction/58bd5898ef2bbd4dfce18de0ecf62c07
rest.4.res = '{'<br>\
   "dc.identifier" : "{0}/CPDBAS_Mouse/prediction/58bd5898ef2bbd4dfce18de0ecf62c07",<br>\
   "rdf.type" : "ot.Dataset",<br>\
   "ot.dataEntry" : '{'<br>\
      "ot.compound" : "{0}/compound/O%3DC%28NC3%3DCC2%3DC%28C%3DC3%29C1%3DCC%3DC%28NC%28C%29%3DO%29C%3DC1C2%29C",<br>\
      "ot.values" : [ '{'<br>\
         "ot.feature" : "{0}/CPDBAS_Mouse/feature/predicted",<br>\
         "ot.value" : "active"<br>\
      '}', '{'<br>\
         "ot.feature" : "{0}/CPDBAS_Mouse/feature/probability",<br>\
         "ot.value" : 0.9985994877678762<br>\
      '}' ]<br>\
   '}'<br>\
'}'


